// Generated by view binder compiler. Do not edit!
package com.example.android.camera2.basic.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageButton;
import android.widget.Switch;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.android.camera2.basic.R;
import com.jjoe64.graphview.GraphView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentPerfilesRGBBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final ImageButton botonContinuar;

  @NonNull
  public final ImageButton exportarDatos;

  @NonNull
  public final ImageButton exportarGrises;

  @NonNull
  public final GraphView graph;

  @NonNull
  public final Switch switchAzul;

  @NonNull
  public final Switch switchGris;

  @NonNull
  public final Switch switchRojo;

  @NonNull
  public final Switch switchVerde;

  private FragmentPerfilesRGBBinding(@NonNull ConstraintLayout rootView,
      @NonNull ImageButton botonContinuar, @NonNull ImageButton exportarDatos,
      @NonNull ImageButton exportarGrises, @NonNull GraphView graph, @NonNull Switch switchAzul,
      @NonNull Switch switchGris, @NonNull Switch switchRojo, @NonNull Switch switchVerde) {
    this.rootView = rootView;
    this.botonContinuar = botonContinuar;
    this.exportarDatos = exportarDatos;
    this.exportarGrises = exportarGrises;
    this.graph = graph;
    this.switchAzul = switchAzul;
    this.switchGris = switchGris;
    this.switchRojo = switchRojo;
    this.switchVerde = switchVerde;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentPerfilesRGBBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentPerfilesRGBBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_perfiles_r_g_b, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentPerfilesRGBBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.botonContinuar;
      ImageButton botonContinuar = ViewBindings.findChildViewById(rootView, id);
      if (botonContinuar == null) {
        break missingId;
      }

      id = R.id.exportarDatos;
      ImageButton exportarDatos = ViewBindings.findChildViewById(rootView, id);
      if (exportarDatos == null) {
        break missingId;
      }

      id = R.id.exportarGrises;
      ImageButton exportarGrises = ViewBindings.findChildViewById(rootView, id);
      if (exportarGrises == null) {
        break missingId;
      }

      id = R.id.graph;
      GraphView graph = ViewBindings.findChildViewById(rootView, id);
      if (graph == null) {
        break missingId;
      }

      id = R.id.switchAzul;
      Switch switchAzul = ViewBindings.findChildViewById(rootView, id);
      if (switchAzul == null) {
        break missingId;
      }

      id = R.id.switchGris;
      Switch switchGris = ViewBindings.findChildViewById(rootView, id);
      if (switchGris == null) {
        break missingId;
      }

      id = R.id.switchRojo;
      Switch switchRojo = ViewBindings.findChildViewById(rootView, id);
      if (switchRojo == null) {
        break missingId;
      }

      id = R.id.switchVerde;
      Switch switchVerde = ViewBindings.findChildViewById(rootView, id);
      if (switchVerde == null) {
        break missingId;
      }

      return new FragmentPerfilesRGBBinding((ConstraintLayout) rootView, botonContinuar,
          exportarDatos, exportarGrises, graph, switchAzul, switchGris, switchRojo, switchVerde);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
